"""
Автомат обрабатывает натуральное девятиразрядное число N по следующему алгоритму:
1. Находится сумма разрядов числа N.
2. Полученное число переводится в двоичную систему счисления.
3. К записи, полученной на предыдущем этапе, дописываются разряды по следующему правилу:
a. Если количество единиц четное дописывается единица слева и два нуля справа,
b. Если количество единиц нечетное дописывается 10 слева и 1 справа.
4. Результат переводится в десятичную систему и выводится на экран.

Пример. Дано число N = 123456789. Алгоритм работает следующим образом:
1. Сумма разрядов 45
2. Двоичная запись 101101.
3. Единиц четное количество, следовательно, получаем 1+101101+00
4. На экран выводится число 436. 

Сколько существует чисел N таких, что в результате работы автомата будет выведено число 21?
"""


# Аналитическое решение
# Пойдем от обратного
# 21 в двоичнос виде - 10101 => двоичное представление суммы разрядов в числе - 10
# сумма разрядов числа - 2
# 2 = 1 + 1 и 2 = 2 + 0
# Число не может начинаться с нуля => 
# Если начинается с еденицы, то вторая еденица может стоять на любой из 8 позиций => 8 вариантов
# Если начинается с двойки, то все остальные нули => 1 вариант

# Ответ: 9

def f(n):
    # 1
    s = sum(int(x) for x in str(n))

    # 2
    r = bin(s)[2:]
    if r.count('1') % 2:
        r = '10' + r + '1'
    else:
        r = '1' + r + '00'
    return int(r, 2)


def solution():
    """
    Очень долго.
    Не сработает на егэ, да и ирл аналитически быстрее.
    """
    cnt = 0
    for i in range(100_000_000, 1_000_000_000):
        if f(i) == 21:
            print(i)
            cnt += 1
    print(cnt)


solution()
# print(f(123456789))